services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:release
    extends:
      file: hwaccel.transcoding.yml
      service: vaapi-wsl # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    depends_on:
      - redis
      - database
    labels:
      traefik.enable: true
      traefik.http.routers.immich.rule: Host(`photos.${DOMAIN}`)
      traefik.http.routers.immich.entrypoints: websecure
      traefik.http.routers.immich.tls: true
      traefik.http.routers.immich.tls.certresolver: letsencrypt
      traefik.http.services.immich.loadbalancer.server.port: 2283
      traefik.http.middlewares.immich-https-redirect.redirectscheme.scheme: https
      traefik.port: 2283
    environment:
      DB_PASSWORD: ${IMMICH_DB_PASSWORD}
      DB_USERNAME: ${IMMICH_DB_USERNAME}
      DB_DATABASE_NAME: ${IMMICH_DB_DATABASE_NAME}
    ports:
      - ${IMMICH_HTTP_PORT}:2283
    expose:
      - 2283
    volumes:
      - "${DOCKER_DATA_DIR}/immich/upload:/usr/src/app/upload"
    networks:
      - web
      - immich
    restart: unless-stopped

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:release
    extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
      file: hwaccel.ml.yml
      service: openvino-wsl # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    environment:
      DB_PASSWORD: ${IMMICH_DB_PASSWORD}
      DB_USERNAME: ${IMMICH_DB_USERNAME}
      DB_DATABASE_NAME: ${IMMICH_DB_DATABASE_NAME}
    restart: always
    networks:
      - immich
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:eaba718fecd1196d88533de7ba49bf903ad33664a92debb24660a922ecd9cac8
    healthcheck:
      test: redis-cli ping || exit 1
    restart: unless-stopped
    networks:
      - immich

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: ${IMMICH_DB_USERNAME}
      POSTGRES_DB: ${IMMICH_DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - "${DOCKER_DATA_DIR}/immich/database:/var/lib/postgresql/data"
    command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: unless-stopped
    networks:
      - immich

volumes:
  model-cache:

networks:
  web:
    name: traefik_web
    external: true
  immich:
    name: immich