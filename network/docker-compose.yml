version: "3.3"

services:
  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    container_name: "cloudflare-ddns"
    environment:
      - API_KEY=AskVh21xlQsQWDh_VpkqDTANWfHlW72lJEVYnHPP
      - ZONE=${DOMAIN}
      - CRON=*/5 * * * *
    restart: unless-stopped
  
  traefik:
    image: traefik:v2.8
    container_name: "traefik"
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN}`) # Define the subdomain for the traefik dashboard.
      traefik.http.routers.traefik.entrypoints: websecure       # Set the Traefik entry point.
      traefik.http.routers.api.service: api@internal            # Enable Traefik API.
      traefik.http.services.nextcloud.loadbalancer.server.port: 8080
      traefik.port: 8080
      # traefik.http.middlewares.admin-auth.basicauth.users: kazuto:$$2y$$10$$kZJcpW4wVIdkJzWGfHQLGu.r1MZef6bb98f/RRW9ANHN.G9zPkZuO
      # traefik.http.routers.traefik.middlewares: admin-auth@docker
    ports:
      - ${TRAEFIK_HTTP_PORT}:80
      - ${TRAEFIK_HTTPS_PORT}:443
      - ${TRAEFIK_DASHBOARD_PORT}:8080
    volumes:
      - ${DOCKER_COMPOSE_DIR}/network/:/etc/traefik/
      - ${DOCKER_DATA_DIR}/letsencrypt/:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - web
    restart: unless-stopped

  pihole:
    image: pihole/pihole:2022.07.1
    container_name: pihole
    environment:
      TZ: ${TZ}
      WEBPASSWORD: HE%&A%6WQ&x4
    labels:
      traefik.enable: true
      traefik.http.routers.pihole.rule: Host(`f2482f7878ecee30c686f1c5ee09d76e.${DOMAIN}`)
      traefik.http.routers.pihole.entrypoints: websecure
      traefik.http.routers.pihole.tls: true
      traefik.http.routers.pihole.tls.certresolver: letsencrypt
      traefik.http.services.pihole.loadbalancer.server.port: 80
      traefik.port: 80
    ports:
      - "${PI_HOLE_DNS_PORT}:53/tcp"
      - "${PI_HOLE_DNS_PORT}:53/udp"
      - "${PI_HOLE_HTTPS_PORT}:80/tcp"
    volumes:
      - ${DOCKER_DATA_DIR}/pihole/pihole:/etc/pihole
      - ${DOCKER_DATA_DIR}/pihole/dnsmasq:/etc/dnsmasq.d
    networks:
      - web
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:2.15.1
    container_name: portainer
    environment:
      TZ: ${TZ}
    labels:
      traefik.enable: true
      traefik.http.routers.portainer.rule: Host(`80d0dd0e0b023e6f976d188c53351968.${DOMAIN}`)
      traefik.http.routers.portainer.entrypoints: websecure
      traefik.http.routers.portainer.tls: true
      traefik.http.routers.portainer.tls.certresolver: letsencrypt
      traefik.http.services.portainer.loadbalancer.server.port: 9443
      traefik.port: 9443
    ports:
      - ${PORTAINER_HTTP_PORT}:8000
      - ${PORTAINER_HTTPS_PORT}:9443
    volumes:
      - ${DOCKER_DATA_DIR}/portainer/:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
    restart: unless-stopped

  heimdall:
    image: linuxserver/heimdall:2.4.13
    container_name: heimdall
    ports:
      - ${HEIMDALL_HTTP_PORT}:80
      - ${HEIMDALL_HTTPS_PORT}:443
    labels:
      traefik.enable: true
      traefik.http.routers.heimdall.rule: Host(`3594131de4c77a189a6ac09d15ef828a.${DOMAIN}`) || Host(`heimdall.${DOMAIN}`)
      traefik.http.routers.heimdall.entrypoints: websecure
      traefik.http.routers.heimdall.tls: true
      traefik.http.routers.heimdall.tls.certresolver: letsencrypt
      traefik.http.services.heimdall.loadbalancer.server.port: 80
      traefik.port: 80
    volumes:
      - ${DOCKER_DATA_DIR}/heimdall:/config
    networks:
      - web
    restart: unless-stopped

  vaultwarden:
    image: vaultwarden/server:1.27.0
    container_name: vaultwarden
    ports:
      - ${VAULTWARDEN_HTTP_PORT}:80
    labels:
      traefik.enable: true
      traefik.http.routers.vaultwarden.rule: Host(`6e48d67113cb48e9767902313f73cea5.${DOMAIN}`) || Host(`warden.${DOMAIN}`)
      traefik.http.routers.vaultwarden.entrypoints: websecure
      traefik.http.routers.vaultwarden.tls: true
      traefik.http.routers.vaultwarden.tls.certresolver: letsencrypt
      traefik.http.services.vaultwarden.loadbalancer.server.port: 80
      traefik.port: 80
    volumes:
      - ${DOCKER_DATA_DIR}/vaultwarden:/data/
    networks:
      - web
    restart: unless-stopped
    
networks:
  web:
    name: traefik_web
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.90.0/24