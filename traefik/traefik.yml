global:
  checkNewVersion: true
  sendAnonymousUsage: false

serversTransport:
  insecureSkipVerify: true
  
entrypoints:
  web:
    address: :80
    forwardedHeaders:
      insecure: true
      trustedIPs: &trustedIps
        # Start of Clouflare public IP list for HTTP requests, remove this if you don't use it
        - 173.245.48.0/20
        - 103.21.244.0/22
        - 103.22.200.0/22
        - 103.31.4.0/22
        - 141.101.64.0/18
        - 108.162.192.0/18
        - 190.93.240.0/20
        - 188.114.96.0/20
        - 197.234.240.0/22
        - 198.41.128.0/17
        - 162.158.0.0/15
        - 104.16.0.0/12
        - 172.64.0.0/13
        - 131.0.72.0/22
        - 2400:cb00::/32
        - 2606:4700::/32
        - 2803:f800::/32
        - 2405:b500::/32
        - 2405:8100::/32
        - 2a06:98c0::/29
        - 2c0f:f248::/32
        # End of Cloudlare public IP list
    http:
      redirections:
        entrypoint:
          to: websecure
          scheme: https

  websecure: 
    address: :443
    forwardedHeaders:
      insecure: true
      trustedIPs: *trustedIps
    http: 
      tls:
        certResolver: letsencrypt
        domains: 
          - main: fae.sh
            sans: 
              - '*.fae.sh'
      middlewares:
        - securityHeaders@file

  tcp: 
    address: :9090

providers: 
  providersThrottleDuration: 2s

  # File provider for connecting things that are outside of docker / defining middleware
  file:
    filename: /etc/traefik/fileConfig.yml
    watch: true

  # Docker provider for connecting all apps that are inside of the docker network
  docker:
    watch: true
    network: traefik_web
    # Default host rule to containername.domain.example
    defaultRule: "Host(`{{ index .Labels \"com.docker.compose.service\"}}.fae.sh`)"
    swarmModeRefreshSeconds: 15s
    exposedByDefault: false

api:
  dashboard: true
  insecure: true

log:
  level: INFO

certificatesresolvers:
  letsencrypt: 
    acme:
      email: kai@fae.sh
      storage: /letsencrypt/acme.json
      tlschallenge: true
      dnsChallenge:
        provider: cloudflare
        # Used to make sure the dns challenge is propagated to the rights dns servers
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.1:53"

experimental:
  plugins:
    cloudflarewarp:
      modulename: github.com/BetterCorp/cloudflarewarp
      version: v1.3.3
